<html><title>AI</title>

<script language="JavaScript">
<!--
function MM_preloadImages() { //v3.0
  var d=document; if(d.images){ if(!d.MM_p) d.MM_p=new Array();
    var i,j=d.MM_p.length,a=MM_preloadImages.arguments; for(i=0; i<a.length; i++)
    if (a[i].indexOf("#")!=0){ d.MM_p[j]=new Image; d.MM_p[j++].src=a[i];}}
}

function MM_swapImgRestore() { //v3.0
  var i,x,a=document.MM_sr; for(i=0;a&&i<a.length&&(x=a[i])&&x.oSrc;i++) x.src=x.oSrc;
}

function MM_findObj(n, d) { //v3.0
  var p,i,x;  if(!d) d=document; if((p=n.indexOf("?"))>0&&parent.frames.length) {
    d=parent.frames[n.substring(p+1)].document; n=n.substring(0,p);}
  if(!(x=d[n])&&d.all) x=d.all[n]; for (i=0;!x&&i<d.forms.length;i++) x=d.forms[i][n];
  for(i=0;!x&&d.layers&&i<d.layers.length;i++) x=MM_findObj(n,d.layers[i].document); return x;
}

function MM_swapImage() { //v3.0
  var i,j=0,x,a=MM_swapImage.arguments; document.MM_sr=new Array; for(i=0;i<(a.length-2);i+=3)
   if ((x=MM_findObj(a[i]))!=null){document.MM_sr[j++]=x; if(!x.oSrc) x.oSrc=x.src; x.src=a[i+2];}
}
//-->
</script>

<body bgcolor="#000000" background="../Images/blackbackg.JPG" text="#FFFFCC" link="#FF0000" vlink="#FF0000" alink="#FFFFFF" onLoad="MM_preloadImages('../Images/mappingh.gif','../Images/featuresh.gif','../Images/screenshotsh.gif','../Images/linksh.gif','../Images/filesh.gif','../Images/contacth.gif','../Images/guideh.gif','../Images/newsh.gif','../Images/faqh.gif','../Images/jobsh.gif','../Images/forumh.gif')">

<div id="Layer1" style="position:absolute; width:660px; height:39px; z-index:1; left: 23px; top: 0px"><img src="../Images/titlebar.gif" width="709" height="59"></div>
<div id="Layer2" style="position:absolute; width:113px; height:12px; z-index:2; left: 23px; top: 59px"><a href="../Mapping/index.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('Image1','','../Images/mappingh.gif',1)"><img src="../Images/mapping.gif" width="114" height="19" border="0" name="Image1"></a></div>
<div id="Layer3" style="position:absolute; width:103px; height:8px; z-index:3; left: 137px; top: 59px"><a href="../designdoc.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('Image2','','../Images/featuresh.gif',1)"><img src="../Images/features.gif" width="119" height="19" border="0" name="Image2"></a></div>
<div id="Layer4" style="position:absolute; width:100px; height:12px; z-index:4; left: 256px; top: 59px"><a href="../screens.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('Image3','','../Images/screenshotsh.gif',1)"><img src="../Images/screenshots.gif" width="119" height="19" border="0" name="Image3"></a></div>
<div id="Layer5" style="position:absolute; width:88px; height:12px; z-index:5; left: 375px; top: 59px"><a href="../links.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('Image4','','../Images/linksh.gif',1)"><img src="../Images/links.gif" width="119" height="19" border="0" name="Image4"></a></div>
<div id="Layer6" style="position:absolute; width:76px; height:11px; z-index:6; left: 494px; top: 59px"><a href="../files.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('Image5','','../Images/filesh.gif',1)"><img src="../Images/files.gif" width="120" height="19" border="0" name="Image5"></a></div>
<div id="Layer7" style="position:absolute; width:96px; height:12px; z-index:7; left: 614px; top: 59px"><a href="../contact.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('Image6','','../Images/contacth.gif',1)"><img src="../Images/contact.gif" width="118" height="19" border="0" name="Image6"></a></div>
<div id="Layer8" style="position:absolute; width:75px; height:15px; z-index:8; left: 23px; top: 78px"><a href="../Guide/index.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('Image0','','../Images/guideh.gif',1)"><img src="../Images/guide.gif" width="114" height="21" border="0" name="Image0"></a></div>
<div id="Layer9" style="position:absolute; width:75px; height:15px; z-index:9; left: 137px; top: 78px"><a href="../index.html" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('Image7','','../Images/newsh.gif',1)"><img src="../Images/news.gif" width="119" height="21" border="0" name="Image7"></a></div>
<div id="Layer10" style="position:absolute; width:94px; height:12px; z-index:10; left: 256px; top: 78px"><a href="../faq.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('Image8','','../Images/faqh.gif',1)"><img src="../Images/faq.gif" width="119" height="21" border="0" name="Image8"></a></div>
<div id="Layer11" style="position:absolute; width:78px; height:14px; z-index:11; left: 375px; top: 78px"><a href="../jobs.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('Image9','','../Images/jobsh.gif',1)"><img src="../Images/jobs.gif" width="119" height="21" border="0" name="Image9"></a></div>
<div id="Layer12" style="position:absolute; width:88px; height:12px; z-index:12; left: 494px; top: 78px"><a href="http://www.thieveryut.com/bb/" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('Image10','','../Images/forumh.gif',1)"><img src="../Images/forum.gif" width="120" height="21" border="0" name="Image10"></a></div>

<div id="Layer13" style="position:absolute; width:96px; height:12px; z-index:13; left: 614px; top: 78px"><a href="../archive.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('Image13','','../Images/archivesh.gif',1)"><img src="../Images/archives.gif" width="118" height="21" border="0" name="Image13"></a></div>
<div id="Layer14" style="position:absolute; width:691px; height:10px; z-index:14; left: 23px; top: 98px"><img src="images/mappingbar.jpg" width="709" height="21"></div>

<div id="NavLayer" style="position:absolute; width:150px; height:160px; z-index:16; left: 735px; top: 130px">
<font size="1" face="Verdana, Arial, Helvetica, sans-serif">

<iframe width=150 height=600 src="nav.htm" frameborder=0 scrolling=no> </iframe>
              

</div>

<div id="Layer15" style="position:absolute; width:695px; height:115; z-index:15; left: 31px; top: 124px">



<font size="2" face="Verdana, Arial, Helvetica, sans-serif" color="#FFFFCC">

<font size="4" face="Verdana, Arial, Helvetica, sans-serif">
Quick Start AI Guide / AI Reference<br>
</font>
<font size="1" face="Verdana, Arial, Helvetica, sans-serif" color="#FF9933">
v1.0 - 14th June 2001 - Joel<p>
</font>

<a name=intro></a>
<P>This document is intended to introduce mappers to ThieveryUT's AI. By the end 
of this guide, you will be able to place AI characters into your levels and get 
them to carry out tasks.</P>
<P>This tutorial assumes that you can already make an Unreal level.&nbsp; You'l 
also need a fully-pathnoded map to play with.&nbsp; For help on pathnoding your 
levels, read&nbsp;Epic's "Unreal Tournament AI and Gameplay for Level 
Designers"&nbsp;document, found <A href="http://unreal.epicgames.com/">here</A> 
somewhere.</P>

<a name=contents><h3>Contents</h3></a>

<ul>
	<li><A href="#placeguard" >Adding a Bot</A>
	<li><A href="#patrol" >Making Bots Patrol</A>
	<li><A href="#ppprops" >Patrol Point Properties</A>
	<li><A href="#loadout" >Giving the Bots Items</A>
	<li><A href="#orders" >Bot Orders</A>
	<li><A href="#properties" >Bot Properties</A>
	<li><A href="#debugpaths" >Debugging the Path Network</A>
	<li><A href="#tips" >General tips</A></li>
</ul>

<a name=placeguard><h3>Adding a Bot</h3></a>
To put an AI-controlled guard into your level, you first need to make sure you have ThieveryAI.u loaded in UnrealEd.  Using the Actor Class Browser, select "Open Package..." from the File menu.  Select ThieveryAI.u and click Open.<p>
Browse the Actor hierarchy for this class:
<code><P>Actor&gt;Pawn&gt;TBaseBot&gt;TBot&gt;TSoldier&gt;TGuard&gt;TKnight.</code>
<P>Select the class, and then go back to your level's 3D view.&nbsp; Right clikc 
where you want the bot to be and select "Add TKnight here".&nbsp; The bot will 
be placed where you right-clicked.&nbsp; If the bot doesn't appear, make sure 
that the place you clicked as enough room for the bot to be 
spawned.</P>
<P>              
               
            
<a name=patrol><h3>Give the Bum a Job (making bots patrol)</h3></a>
<P>We'll make this bot Patrol, so open up the bot's properties (right-click, 
select "Properties..." and open up the TBot menu in the properties dialog.&nbsp; 
Scroll down to Orders, and type in 'Patrol'.&nbsp; The bot will now patrol, but 
he needs a TPatrolPoint to patrol to.&nbsp; Patrol points need to be named 
(using their Tag property), so into the bot's OrdersTag field, enter the name of 
the patrol point you would like the bot to patrol to.&nbsp; For this guide, 
we'll use TPP1_1 - the notation I used here defines patrol point 1 in patrol 
route 1.&nbsp; In the real world, you'd make it easier for yourself by giving 
the patrol points better names, e.g. FrontYard1, FrontYard2, ousePerimiter1, 
etc.</P>
<P>So now the bot has been told to patrol to the patrol point with the Tag 
'TPP1_1', so we'll have to add this patrol point in somewhere.&nbsp; In the 
Actor Class Browser, find this class:</P>
<P><code>Actor&gt;NavigationPoint&gt;TPatrolPoint</code></P>
<P>Add one of these actors into your level where you want 
the first patrol point to be.&nbsp; Bring up the properties of the new patrol 
point, and set the patrol point's Tag to 'TPP1_1'.&nbsp; While your at it, set 
it's Event to 'TPP1_2' - the Event property defines the next point in the patrol 
route.&nbsp; Open up the TPatrolPoint menu.&nbsp; Seeing as this is the first 
point in a route, set the PatrolRouteName to "My First Patrol Route" (or 
something equally stupid).&nbsp; This is what the patrol route will be called 
when you frob a bot in-game and tell him to patrol - you will be presentd with a 
menu of all named patrol routes in the level.&nbsp; Note that you only need to do this once pre patrol route (that is, you should only name a patrol 
route once).</P>
<P>When the bot reaches this patrol point, let's make him 
look at something.&nbsp; In the LookAtTag, enter 'LookAtMe'; in PatrolAction, 
select 'ETPA_Wait'; and in ActionTime, enter 2.&nbsp; This will make the bot 
stop and look at towards the actor with Tag 'TheTree' for 2 seconds.&nbsp; Now 
that we've told the bot to look at something, we need to actually give him 
something to look at.&nbsp; Add in a decoration actor (e.g. a book or bush or something) and set it's Tag 
to 'LookAtMe'.</P>
<P>          
                
                 
              
           
               
           That's the first point 
done with.&nbsp; Once the bot has finished doing the action, he will move on to the next point, so we'd better put it in.&nbsp; 
Stop and have a think about where you want your bot to walk when he patrols your level, and plan out 
a route.</P>
<P>          
                
                 
       Add in&nbsp;the second&nbsp;patrol point, and set it's 
Tag property to 'TPP1_2'.&nbsp; Set it's PatrolAction to ETPA_Nothing, which will 
make the bot immediately carry on to the next point when he reaches this point.&nbsp; 
Speaking of the next point, add that in too, and the one after that, and 
as many as you want (though not too many -&nbsp;baby steps for beginners).&nbsp; When you have placed your last point, set it's Event property 
to the Tag of the first patrol point we placed, namely 'TPP1_1'.&nbsp; This will make the bot walk this route in 
a loop.</P>
<a name=ppprops><h3>  TPatrolPoint Properties</h3></a>
<P>These are the different settings for&nbsp;PatrolAction - what a bot does when 
he reaches this point (usually for ActionTime seconds):</P>
<UL>
  <LI>
  <DIV>ETPA_Nothing - the bot does nothing, and immediately carries on to the 
  next point.</DIV>
  <LI>
  <DIV>ETPA_LookAround - the bot looks aound for a bit (see the description 
  below).</DIV>
  <LI>
  <DIV>ETPA_Wander - the bot will wander on the spot.</DIV>
  <LI>
  <DIV>ETPA_CallBuddies - the bot will call out for help - <EM>this action&nbsp;has been&nbsp;removed, so don't use it!</EM> </DIV>
  <LI>
  <DIV>ETPA_NewOrders - the bot will carry out the orders specified by Orders 
  and OrdersTag.&nbsp; ActionTime is ignored.</DIV>
  <LI>
  <DIV>ETPA_Sleep - the bot will go to sleep!&nbsp; ActionTime is ignored.</DIV>
  <LI>
  <DIV>ETPA_Animate - the bot will play the animation specified in 
  BotAnimation.&nbsp; ActionTime is ignored.</DIV></LI></UL>
<P>bDirectional (under Advanced) lets you set the patrol point's rotation in 
UnrealEd.&nbsp; If a bot reaches a patrol point that is bDirectional, he will 
look in the same direction that the point 'faces' when he reaches that 
point.&nbsp; Note that this is overridden by LookAtTag.</P>
<P>          
                
                 
              
           
               
               
                        
                     
 Whenever a bot reaches a patrol point, the point's 
ArriveEvent will be triggered (with the bot as the trigger instigator), but only 
for a maximum of TriggerCount          
                
                 
              
           
               
               
                        
                     
 times.</P>
<P>          
                
                 
              
           
               
               
                        
                     
 BotAnimation makes a bot play an animation when he 
reaches the patrol point, and must be used in conjunction with PatrolAction, 
i.e. set PatrolAction to ETPA_Animate.&nbsp; Set BotAnimation to the name of the 
animation you want the bot to          
                
                 
              
           
               
               
                        
                     
 play.</P>
<P>          
                
                 
              
           
               
               
                        
                     
 BotSpeed makes bots travel&nbsp;to this patrol 
point&nbsp;at the desired speed.&nbsp; By default, it is ETPPS_NoChange, which 
doesn't alter the bot's          
                
                 
              
           
               
               
                        
                     
 speed.</P>
<P>          
                
                 
              
           
               
               
                        
                     
 LookAroundFovDegrees defines the arc that the bot will 
'look around' when PatrolAction is set to ETPA_LookAround.&nbsp; Specifically, 
the bot will turn LookAroundFovDegrees/2 degrees to the left, look around, then 
turn LookAroundFovDegrees to the right and look around.&nbsp; The 'origin', i.e. 
the original angle the bot bases these turnings on depends on the patrol point's 
Rotation /          
                
                 
              
           
               
               
                        
                     
 LookAtTag.</P>
<P>          
                
                 
              
           
               
               
                        
                     
 NewOrders and NewOrdersTag let you change a bot's orders 
when they reach this point, if PatrolAction&nbsp;is set to ETPA_NewOrders.&nbsp; 
They work in exactly the same manner as the bot's own Orders and OrdersTag 
properties.&nbsp; This basically tells the bot to 'do something else' when he 
reaches this patrol          
                
                 
              
           
               
               
                        
                     
 point.</P>
<P>PatrolRouteName lets you give names to your patrol routes.&nbsp; These names 
show up in the menu when you tell a friendly bot to Patrol.&nbsp; Only name one 
point in each route - you are naming the route, not each individual point.</P>
<a name=loadout><h3>Give the Bot a Great Weapon of Death (bot loadouts)</h3></a>
<P>          
                
                 
              
           
               
               
                        
                     
 By default, the bots come with a loadout pre-defined in 
their code.&nbsp; This loadout is the 'standard' bot loadout for Thievery.&nbsp; 
If you look at the bot's DefaultLoadoutClass property, you will see that it is 
set to Class'ThieveryAI.TBotLoadoutInfo'.&nbsp; This means that this bot 
automatically gets this class' loadout when he starts the game.&nbsp; If you 
browse the Actor Class Browser          
                
                 
              
           
               
               
                        
                     
 for...</P>
<P>          
                
                 
              
           
               
               
                        
                     
 <code>Actor&gt;Info&gt;TInfo&gt;TBotLoadoutInfo</code></P>
<P>          
                
                 
              
           
               
               
                        
                     
 ...you will be able to select a different default 
loadout (you can even make one of your own, though that is beyond the scope of 
this quick guide).&nbsp; You can also set the property to nothing, which means 
the bot doesn't have a default          
                
                 
              
           
               
               
                        
                     
 loadout.</P>
<P>          
                
                 
              
           
               
               
                        
                     
 Another way to give bots a loadout at the start of a 
level, which is much easier, is by placing a TBotLoadoutInfo actor into the 
level somewhere (anywhere, it doesn't atter - the actor is invisible 
in-game).&nbsp; You can edit this actor's properties (under the TBotLoadoutInfo 
menu in the properties dialog), adding up to 64 loadout items.&nbsp; Expand the 
BotLoadout submenu, and expand the first submenu under          
                
                 
              
           
               
               
                        
                     
 that.</P>
<P>          
                
                 
              
           
               
               
                        
                     
 Click the InvClass property's "..." button, and browse 
to an Inventory item that you want to give to the bot.&nbsp; You <EM>can</EM> give the bot non-Thievery items, but it's best to 
only give them Thievery items, i.e. items under:</P>
<P> 
              
   <code>Inventory&gt;Pickup&gt;ThieveryPickup</code> and</P>
<P>           
                
                 
              
           
               
               
                        
                     
 <code>Inventory&gt;Weapon&gt;TournamentWeapon&gt;ThieveryWeapon</code></P>
<P>          
                
                 
              
           
               
               
                        
                     
 Select the item you want and go back to the loadout 
actor's properties.&nbsp; In the Quantity field, enter the number of these items 
you want to give to the bot.&nbsp; The actual number given to the bot will 
depend on the Type setting - select ETIIT_Absolute to give the bot exactly 
Quantity numer of the item, or ETIIT_ScaleQuantityBySkill to scale the Quantity 
by the bot's BotSkill property, and give the bot the number ofitems in the 
result.&nbsp; Give the Loadout actor a unique Tag, something like 
'MyLoadout'.</P>
<P>          
                
                 
              
           
               
               
                        
                     
 Now that you have defined a new loadout, give it to some 
bots.&nbsp; Find a bot and bring up his properties.&nbsp; Under the TBot menu, 
enter 'MyLoadout' into the LoadoutActorTag field.</P>
<P>          
                
                 
              
           
               
               
                        
                     
 When the bot enters the level, he will be given loadouts 
from two sources - the class defined by his DefaultLoadoutClass property (which 
you can clear so the bot doesn't have a default loadout); and the in-level 
TBotLoadout actor identified by the bot's LoadoutActorTag property (which can 
also be nothing).</P>          
<a name=properties><h3>Bot Properties</h3>           
            
            
  </a>
<P>          
                
                 
              
           
               
               
                        
                     
            
            
              
   Here's a useful bunch of properties, and 
what they do.</P>
<P><STRONG>TBaseBot-&gt;fInhabitPriority</STRONG>          
                
                 
              
           
               
               
                        
                     
            
            
              
          
  </P>
<P>          
                
                 
              
           
               
               
                        
                     
            
        This is used to 
determine the order in which bots are inhabited by human players.&nbsp; A higher priority 
means the bot isl be likely inhabited before other bots 
with lower priorities.</P>
<P><STRONG>TBaseBot-&gt;bPlayerCanInhabit</STRONG>          
                
                 
              
           
               
               
                        
                     
            
            
              
          
  </P>
<P>          
                
                 
              
           
               
               
                        
                     
            
            
              
  Whether or not this bot can be inhabited 
by human players.</P>
<P><STRONG>TBaseBot-&gt;bTakesOrders</STRONG>          
                
                 
              
           
               
               
                        
                     
            
            
              
          
  </P>
<P>          
                
                 
              
           
               
               
                        
                     
            
            
              
   Whether or not this bot takes orders 
from friendly players.</P>
<P><STRONG>TBot_Debug-&gt;bVerbose</STRONG>          
                
                 
              
           
               
               
                        
                     
            
            
              
          
  </P>
<P>          
                
                 
              
           
               
               
                        
                     
            
            
   Set this to true and the bot will spit out lots 
of spam to the message window and log.&nbsp; Useful for 
debugging your maps.</P>
<P><STRONG>TBot_Advanced-&gt;fSightRadius</STRONG>          
                
                 
              
           
               
               
                        
                     
            
            
              
          
  </P>
<P>          
                
                 
              
           
               
               
                        
                     
            
            
     How far the bot can see, in Unreal Units.&nbsp; 
To aquire an enemy, it must be within approximately 75% 
of this distance.</P>
<P><STRONG>TBot-&gt;BotTorchLightClass</STRONG>          
                
                 
              
           
               
               
                        
                     
            
            
              
          
  </P>
<P>          
                
                 
              
           
               
               
                        
                     
            
            
Set this to a valid Class (under Light-&gt;TBotTorchLight), and the bot will have a 
light that shines where he is looking.&nbsp; Defaults to None, 
i.e. no torch.</P>
<P><STRONG>TBot_Advanced-&gt;fHearingRadius</STRONG>          
                
                 
              
           
               
               
                        
                     
            
            
              
          
  </P>
<P>          
                
                 
              
           
               
               
                        
                     
    How far a bot hears.&nbsp; Note that even 
though a bot might hear a far way, the further away the 
sound's source is, the less he will hear it.&nbsp; Bot's ignore sounds that are 
heard at low volumes, e.g. sounds towards the extents of 
their hearing radius.</P>
<P><STRONG>TBot-&gt;MaxHealth</STRONG>          
                
                 
              
           
               
               
                        
                     
            
            
              
          
  </P>
<P>          
                
                 
              
           
               
               
                        
                     
            
            
              
         The 
bot's maximum health.</P>
<P><STRONG>TBot-&gt;DamageScale</STRONG>          
                
                 
              
           
               
               
                        
                     
            
            
              
          
  </P>
<P>          
                
                 
              
           
               
               
                        
                     
 Bots          
                
                 
              
           
               
               
                        
                     
 use varius factors to determine how much damage they take,&nbsp;and this 
factor is applied to the damage amount last.&nbsp; So for a tougher 
than normal bot, set this to a value less than 1.0, e.g. set it 
to 0.5 and the bot will take half as much 
damage as normal.</P>
<P><STRONG>TBot_Voice-&gt;VoicePackage and 
VoiceSet</STRONG>          
                
                 
              
           
               
               
                        
                     
            
            
              
          
  </P>
<P>          
                
                 
              
           
               
               
                        
                     
            
        Determines a bot's voice 
- if this is left blank, the bot will choose a random voice (TSoldiers 
only).&nbsp; See the documentation on bot voice sets for information 
abotu voice sets.</P>
<P><STRONG>TBot_Triggers</STRONG>          
                
                 
              
           
               
               
                        
                     
            
            
              
          
  </P>
<P>          
                
                 
              
           
               
               
                        
                     
            
            
         There are a certain Triggers 
sent out when a bot receives various events.&nbsp; these events 
are listed below:</P>
<UL>
  <LI>
<DIV><STRONG>Trigger_StartAlertness </STRONG>          
                
                 
              
           
               
               
                        
                     
            
            
             - 
triggered when a bot first starts to become aware of 
some suspicous activities</DIV>
  <LI>
<DIV><STRONG>Trigger_Aware</STRONG>          
                
                 
              
           
               
               
                        
                     
            
            
              
- triggered when a bot starts to investigate, untriggered when 
he calms down</DIV>
  <LI>
<DIV><STRONG>Trigger_Alert</STRONG>          
                
                 
              
           
               
               
                        
                     
            
            
          - triggered when a 
bot is aware of someone's presence, untriggered when he goes 
back to investigating</DIV>
  <LI>
<DIV><STRONG>Trigger_Enemy</STRONG>          
                
                 
              
           
               
               
                        
                     
            
            
              
    - triggered when the bot aquires 
his first enemy</DIV>
  <LI>
<DIV><STRONG>Trigger_WakeUp</STRONG>          
                
                 
              
           
               
               
                        
                     
            
            
              
     - triggered when a bot 
first wakes up</DIV>
  <LI>
<DIV><STRONG>Trigger_Hurt</STRONG>          
                
                 
              
           
               
               
                        
                     
            
            
         - triggered when a bot 
first takes damage from another player (including teammates if friendly 
fire is on)</DIV>
  <LI>
<DIV><STRONG>Trigger_Die</STRONG>          
                
                 
              
           
               
               
                        
                     
            
            
              
    - triggered when the bot dies 
(not knocked out)</DIV>
  <LI>
<DIV><STRONG>Trigger_KnockedOut</STRONG>          
                
                 
              
           
               
               
                        
                     
            
            
              
     &nbsp;- triggered when the bot 
is knocked out</DIV></LI></UL>
<P><STRONG>TBot-&gt;Orders and OrdersTag</STRONG>          
                
                 
              
           
               
               
                        
                     
            
            
              
          
  </P>
<P>          
                
                 
              
           
               
               
                        
                     
            
            
              
       See the information 
on orders, <A href="#orders" >above</a>.</P>
<P><STRONG>TBot-&gt;bDelayedStart</STRONG>          
                
                 
              
           
               
               
                        
                     
            
            
              
          
  </P>
<P>          
                
                 
              
           
               
               
                        
                     
            
            
         At level start, bot will 
stand in position until seen by a PlayerPawn, and then 
do it's orders.</P>
<P><STRONG>TBot-&gt;HelmetProbability</STRONG>          
                
                 
              
           
               
               
                        
                     
            
            
              
          
  </P>
<P>          
                
                 
              
           
               
               
                        
                     
 The bot's probability of getting a helmet when a bot 
enters the level. 0.0 = no helmet, 1.0 =          
                
                 
              
           
               
               
                        
                     
            
           always 
get a helmet.&nbsp; Set to -1.0 to use the bot's BotSkill as the probability 
(i.e. higher skilled bots will have a greater chance of 
getting a helmet).</P>
<P><STRONG>TBot-&gt;BotSkill</STRONG>          
                
                 
              
           
               
               
                        
                     
            
            
              
          
  </P>
<P>          
                
                 
              
           
               
               
                        
                     
           The 
bot's skill, from 0.0 (crap) to 1.0 (better, but still crap).&nbsp; Determines 
lots of stuff, such as how fast the bot moves, how long it takes 
him to respond to suspicious events, how well he aims 
when attacking, etc.</P>
<P><STRONG>TBot-&gt;BotName</STRONG>          
                
                 
              
           
               
               
                        
                     
            
            
              
          
  </P>
<P>          
                
                 
              
           
               
               
                        
                     
            
            
      You can name your bots by typing the 
name into this field.&nbsp; Leave at blank to have a 
name randonly chosen.</P>
<P><STRONG>TBot-&gt;bStickWithEnemy</STRONG>          
                
                 
              
           
               
               
                        
                     
            
            
              
          
  </P>
<P>          
                
                 
              
           
               
               
                        
                     
            
            
        If true, a bot will stick 
with one enemy, instead of breaking off one attack to 
engane another hostile.</P>
<P><STRONG>TBot-&gt;bActivateAlarmBeforeEngaging</STRONG>          
                
                 
              
           
               
               
                        
                     
            
            
              
          
  </P>
<P>          
                
                 
              
           
               
               
                        
                     
 Set this          
                
                 
              
           
               
               
                        
                     
 to true and the bot will activate the alarm, then come 
back and beat you up.&nbsp; False, and he'll beat you up until 
he deems the fight over (he kills you or you pummel him so hard 
that he tries to flee), and then he'll run to 
raise the alarm.</P>
<P><STRONG>TBot-&gt;bFlees and fFleeFactor</STRONG>          
                
                 
              
           
               
               
                        
                     
            
            
              
          
  </P>
<P>          
                
                 
              
           
               
               
                        
                     
          bFlees determines 
whether or not the bot flees when he gets damaged.&nbsp; He will 
flee when his Health gets lower than his MaxHealth*fFleeFactor, e.g. the default fFleeFactor of 
0.25 means the bot flees if his health gets below 
35% of full.</P>
<P><STRONG>TBot_Combat-&gt;bAttacksMelee and 
bAttacksRanged</STRONG>          
                
                 
              
           
               
               
                        
                     
            
            
              
          
  </P>
<P>          
                
                 
              
           
               
               
                        
                     
            
            
Whether or not the bot engages in the two forms of combat.&nbsp; There's also 
lots of other properties under the TBot_Combat that determine the 
bot's combat capabilities.</P>
<P><STRONG>TBot-&gt;bNoInvestigate</STRONG>          
                
                 
              
           
               
               
                        
                     
            
            
              
          
  </P>
<P>          
                
                 
              
           
               
               
                        
                     
            
            
              
 If true the bot will not wander off to 
investigate suspicious events.</P>
<P><STRONG>TBot-&gt;AlarmTag</STRONG>          
                
                 
              
           
               
               
                        
                     
            
            
              
          
  </P>
<P>          
                
                 
              
           
               
               
                        
                     
            
       Set this to the Tag 
of the TAlarmSystem that you want this bot to activate when he sees an 
enemy.&nbsp; The bot will run to the nearest button and 
raise the alarm.</P>
<P><STRONG>TBot-&gt;bHeedsAlarm</STRONG>          
                
                 
              
           
               
               
                        
                     
            
            
              
          
  </P>
<P>          
                
                 
              
           
               
               
                        
                     
            
            
              
   Whether or not this bot will respond 
to raised alarms.</P>
<P>          
                
                 
              
           
               
               
                        
                     
   For descriptions of the rest of the properties, right-click 
TBot in the actor class browser and select 'Edit Script'.&nbsp; Do a 
search for the name of the property you want until you find the place 
where it is defined in the code - it will 
look something like:</P>
<P><code>var() name Orders; // Orders a bot is carrying out</code></P>
<P>          
                
                 
              
           
               
               
                        
                     
            
            
              
 The part after the double slash is a description 
of the property.</P>          
<a name=orders><h3>  Bot Orders</h3>
<P>           
            
            
  </a>          
<a name=orders>
           
              
            Listed below&nbsp;are 
the different types of orders you can give to bots.&nbsp; Normally you'd set a 
bot's Orders and OrdersTag properties in UnrealEd, but you can also change a 
bot's orders using TPatrolPoints and TOrdersChangers.</P>
<H4>Patrol</H4><p>The bot will patrol&nbsp;the route defined by 
OrdersTag.&nbsp; Set OrdersTag to the Tag of one of the patrol points in the 
route you want the bot to patrol.</p>
<H4>Move</H4><p>The bot will move to the actor identified by the 
OrdersTag property.&nbsp; Similar to using a finite (i.e. non-looping) patol 
route, but with less features.</p>
<H4>Wander</H4><p>The bot will wander on the spot.&nbsp; Handy for 
creatures, such as rats and spiders.&nbsp; When wandering, a bot does not use 
the path network, therefore it is severely liited in it's navigation abilities, 
and will stay in the same part of the level.</p>
<H4>Roam</H4><p>Roam is similar to Wander, but the bot uses the path 
network to navigate the level.&nbsp; The bot picks a random destination 
somewhere in the level and heads for it.&nbsp; When the bot reaches it's goal, 
it picks another random destination in the level and heads for that, and so forth.</p>
<H4>Stand</H4><p>The bot will stand on the spot.&nbsp; If the bot is 
moved from this spot (i.e. runs off to chase an enemy or is bumped by a friendly 
player), the bot will not return to his original spot.&nbsp; If you need the bot 
to return to his 'guard' location, either&nbsp;tell him to&nbsp;Patrol on a 
route with only one point (he will move to and stay at that point), or give him GuardHere orders.</p>
<H4>Guard</H4><p>The bot will move to and guard the actor defined by 
OrdersTag.&nbsp; If the other actor is a player, the bot will protect it, 
getting suspicious if the 'Guard Object' gets damaged.&nbsp; Multiple bots told 
to guard the same player will also stand and walk in formation.&nbsp; The 
formation they choose is defined by the 'Lead' guarding bot's Formation 
property, and can be set to any Object&gt;TBotFormation&nbsp;subclass.&nbsp; The 
'Lead' bot is always the 'oldest' bot - Unreal gives it's actors ordered names 
like TKnight0, TKnight1, etc, depending on the order they were added into the 
level.&nbsp; Therefore, the oldest bot will be the bot with the lowest number.</p>
<H4>Follow</H4><p>The bot will follow the actor identified by OrdersTag 
around.&nbsp; Very similar to the Guard orders, but the bot doesn't 'protect' it's object.</p>
<H4>
<H4>GuardHere</H4></H4>
<P>Similar to Stand orders, but the bot will return to it's original location if 
it moves for some reason.&nbsp; The bot will ignore suspicous things that aren't 
in it's immediate vicinity, and will not chase enemies too far.</P>
<H4>              
             
          Sleep</H4>
<P>              
       The bot will sleep at his 
location, changing his orders to 'Stand' if he is woken up.</P>
<H4>              
             
          Investigate</H4>
<P>              
     The bot will investigate his present location, or 
if an OrderObject is supplied, he wil investigate that object's location.</P>
<H4>              
             
          StandDown</H4>
<P>              
 Not really 'orders', but anybot told to do this will become totally 
unalert and resume his present orders.&nbsp; Used to calm bots down.</P>
<H4>Defense (work in progress orders - very broken)</H4><p>Bots with Defense orders will perform acts that help 
defend their objective, i.e. place mines, repair broken whistlers, etc.&nbsp; 
You need to define areas to place items in your maps, using 
TSuggestedItemLocation actors, if you want bots to place items.</p></A>
<H3>


<a name=debugpaths>Debugging Your Path Network</a></H3>
<P>Bots will write warnings to the log file if they can't reach their goal 
destination from their current location.&nbsp; This usually means your path 
network needs tweaking, so note down where the bot is, and where he wants to get 
to, and try to manually 'walk' this path in UnrealEd.&nbsp; Look for pathnodes 
that are close to walls, or too high off the ground.&nbsp; If you open up a 
viewport's menu (by right-clicking in it's top border) 
and&nbsp;select&nbsp;"View&gt;Show Paths", you will be able to visually inspect 
the links between path nodes.&nbsp;&nbsp;Blue lines is good, red lines is 
bad.</P>
<P>          
Note:&nbsp; bots will not write bad path warnings to the 
log if you don't have this line in <EM>System/ThieveryAI.ini</EM>,&nbsp;under 
the <EM>"[ThieveryAI.TVoiceSet]"</EM>          
                     
 section:</P>
<P><code>bWriteBadPathWarnings =           True</code></P>
<H3>Bot Debug Info</H3>
<P>If you start a map using the Thievery AI Debug gamrtype, you will be able to 
view extended information on the bots.&nbsp; Once in the game, use the console 
command 'hudon' to activate a debug HUD that will show some information about 
you, as well as extended information on the last bot you looked directly 
at.&nbsp; Use 'hudoff' to turn off this info, or 'togglehud' to toggle it 
between on and off.</P>
<P>The current bot that is 'active', ie. the last bot you looked at (and who's 
information you are viewing) will output information on his actions to the 
message window, console and log.&nbsp; This can be used to see what&nbsp;the bot 
is&nbsp;thinking.&nbsp; You can turn this off by typing 'verbose' in the 
console.&nbsp; Use the same command, or just look at another bot, to turn it 
back on.</P>
<P>You can also use the console command 'cheatview tbot' to follow a bot in 
chasecam mode.&nbsp; Doing this also sets the viewed bot as the 'active' 
bot.</P>
<P></P>          
                     
<a name=tips><h3>General Tips</h3></a>
<P>When moving from one point to the next, a bot will 
always use the shortest path.&nbsp; If you find your bot taking an unintended path from one 
point to the next, add an intermediary path in between the original two, somewhere on the path you want the bot 
to take.</P>
<P>          
                     
 The pathfinding doesn't work through areas with 
overhanging ledges, such as at the bottom of a ramped tunnel.&nbsp; Give          
                     
 the bot a bit of extra overhead 
clearance when designing your level.&nbsp; Give the bots a bit of clearance to the 
sides, too.&nbsp; The pathfinding can be very finicky at          
                     
 times.</P>
<P>          
                     
 If a bot is given bad orders (misspelt or an invalid 
OrderObject), he set his orders to          
                     
 Roam.&nbsp; If one of your bots seems to wander off and 
do his own thing, check that his orders are still what you set them 
to, andcheck the log for warnings.&nbsp; Generally, if a bot isn't doing what you want him 
to do, check the log for          
                     
 warnings.</P>
<P>          
                     
            
              
   Thievery bots use Thievery's TPatrolPoints, not Unreal's PatrolPoints.&nbsp; Many tears of frustration have 
been shed due to this simple          
                     
 fact.</P>
<P>          
                     
            
  Bots can't swim.&nbsp; If they fall in water, they will eventually drown.&nbsp; 
Try to position your pathnodes so they stay as far away from water as you can 
get them, without sacrificing the path's          
                     
 usefulness.</P>
       

<center><img src="images/rune.gif"></center><p>

</body>
</html>